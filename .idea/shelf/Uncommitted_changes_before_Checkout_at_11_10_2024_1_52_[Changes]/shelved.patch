Index: GptVPN.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import logging\r\nfrom flask import Flask, request, jsonify\r\nimport requests\r\n\r\napp = Flask(__name__)\r\nOPENAI_URL = \"https://api.openai.com\"\r\nPROXY_AUTH_KEY = '123'\r\nlogging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')\r\n\r\n\r\n@app.route(\"/<path:endpoint>\", methods=[\"GET\", \"POST\", \"PUT\", \"DELETE\", \"PATCH\"])\r\ndef proxy_request(endpoint):\r\n\r\n    # check proxy auth\r\n    if request.headers.get('X-PROXY-AUTH-KEY') != PROXY_AUTH_KEY:\r\n        return jsonify('Unauthorized'), 401\r\n\r\n    # prepare data\r\n    url = f\"{OPENAI_URL}/{endpoint}\"\r\n    headers = {'Authorization': request.headers.get('Authorization')}\r\n\r\n    # get response from openai\r\n    response = requests.request(\r\n        url=url,\r\n        method=request.method,\r\n        json=request.json,\r\n        headers=headers\r\n    )\r\n\r\n    return response.json(), response.status_code\r\n\r\nif __name__ == \"__main__\":\r\n    app.run()\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/GptVPN.py b/GptVPN.py
--- a/GptVPN.py	(revision 15b372e9f9db0dc97452f71692cf0623243d788f)
+++ b/GptVPN.py	(date 1728629473070)
@@ -4,7 +4,7 @@
 
 app = Flask(__name__)
 OPENAI_URL = "https://api.openai.com"
-PROXY_AUTH_KEY = '123'
+PROXY_AUTH_KEY = 'cwAAlSxYdTx4R9toslFWxBdh'
 logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')
 
 
@@ -17,17 +17,22 @@
 
     # prepare data
     url = f"{OPENAI_URL}/{endpoint}"
-    headers = {'Authorization': request.headers.get('Authorization')}
+    headers = {
+        'Content-Type': 'application/json',
+        'Authorization': request.headers.get('Authorization')
+    }
 
     # get response from openai
     response = requests.request(
         url=url,
         method=request.method,
-        json=request.json,
+        data=request.json,
         headers=headers
     )
 
     return response.json(), response.status_code
 
+
 if __name__ == "__main__":
     app.run()
+
